/* NOTE: elems must have 'masonry-item' as standalone class in order to be found by js */



/* General masonry-item style */
.masonry-item {
  min-width: 100px;
  width: calc(100% / 4);
  padding: 12px; /* CONTROLS SPACING BETWEEN CARDS */
  overflow: hidden;
}
/* Determines grid columns. Not displayed */
.masonry-spacer {
  width: calc(100% / 12);
}

/* masonry-item variations */
.masonry-item-media {
  max-height: 700px;
}
  .masonry-item-media img {
    width: 100%;
    height: 100%;
    transform: scale(1.01);
    filter: grayscale(.5);
  }
.masonry-item-text {
}
.masonry-item-post {
}
.masonry-item-profile {
}
.masonry-item-medium {
  width: calc(100%/2);
}
.masonry-item-large {
  width: calc(3 * 100%/4);
}

/* masonry media queries */
@media only screen and (max-width: 1200px) {
  .masonry-item {
    width: calc(100% / 3);
  }
  .masonry-item-medium {
    width: calc(2 * 100%/3);
  }
  .masonry-item-large {
    width: calc(100%);
  }
}
@media only screen and (max-width: 900px) {
  .masonry-item {
    width: calc(100% / 2);
  }
  .masonry-item-large {
    width: calc(100%);
  }
}
@media only screen and (max-width: 650px) {
  .masonry-item {
    width: calc(100%);
  }
}





/* Card initial-styles */
.card {
  background-color: var(--color-dark);
  --item-color: var(--color-primary);
  box-shadow: 1px 1px 3px 1px rgba(0,0,0,.2);
  width: 100%;
  /* height: 100%; */
  min-height: 20px;
  transition: all .4s;
  overflow: hidden;
}
  .card:hover {
    filter: brightness(1.1);
  }
  .card.pop {
    --item-color: var(--color-dark);
    background: var(--color-secondary);
    color: var(--color-dark);
  }

/* Card structures */
.card .textbox {
  padding-right: 20px;
  padding-left: 5px;
  overflow-y: auto;
  overflow-x: hidden;
  height: 100%;
  max-height: 300px;
}
.card .card-bg {
  display: block;
  background: var(--item-color);
  color: var(--color-dark);
  background-size: cover;
  background-position: center 30%, center;
  background-repeat: no-repeat;
  height: 250px;
}
